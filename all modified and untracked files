warning: in the working copy of 'setup.sh', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex e69de29..b694934 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m.venv[m
\ No newline at end of file[m
[1mdiff --git a/Procfile b/Procfile[m
[1mindex e69de29..645733f 100644[m
[1m--- a/Procfile[m
[1m+++ b/Procfile[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mweb: sh setup.sh && streamlit run app.py[m
\ No newline at end of file[m
[1mdiff --git a/app.py b/app.py[m
[1mindex e69de29..cbd4f27 100644[m
[1m--- a/app.py[m
[1m+++ b/app.py[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32mimport streamlit as st[m
[32m+[m[32mimport pickle[m
[32m+[m[32mimport pandas as pd[m
[32m+[m[32mimport requests[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mdef fetch_poster(movie_id):[m
[32m+[m[32m    try:[m
[32m+[m[32m        response = requests.get([m
[32m+[m[32m            'https://api.themoviedb.org/3/movie/{}?api_key=99ceaa04cb5c7ccea6c15f0eacd32872&language=en-US'.format(movie_id)[m
[32m+[m[32m        )[m
[32m+[m[32m        response.raise_for_status()[m
[32m+[m[32m        data = response.json()[m
[32m+[m[32m        return "https://image.tmdb.org/t/p/w500" + data.get('poster_path', 'default_poster_path.jpg')[m
[32m+[m[32m    except requests.exceptions.RequestException as e:[m
[32m+[m[32m        print(f"Error fetching poster: {e}")[m
[32m+[m[32m        return 'default_poster_path.jpg'[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mdef recommend(movie):[m
[32m+[m[32m    movie_index = movies[movies['title'] == movie].index[0][m
[32m+[m[32m    distances = similarity[movie_index][m
[32m+[m[32m    movie_list = sorted(list(enumerate(distances)), reverse=True, key=lambda x: x[1])[1:6][m
[32m+[m
[32m+[m[32m    recommended_movies = [][m
[32m+[m[32m    recommended_movies_poster = [][m
[32m+[m[32m    for i in movie_list:[m
[32m+[m[32m        movie_id = movies.iloc[i[0]].id[m
[32m+[m
[32m+[m[32m        recommended_movies.append(movies['title'].iloc[i[0]])[m
[32m+[m[32m        recommended_movies_poster.append(fetch_poster(movie_id))[m
[32m+[m[32m    return recommended_movies, recommended_movies_poster[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mmovies_dict = pickle.load(open('movies_dict.pkl', 'rb'))[m
[32m+[m[32mmovies = pd.DataFrame(movies_dict)[m
[32m+[m
[32m+[m[32msimilarity = pickle.load(open('similarity.pkl', 'rb'))[m
[32m+[m
[32m+[m
[32m+[m[32mst.title('Movie Recommender System')[m
[32m+[m
[32m+[m
[32m+[m[32mselected_movie_name = st.selectbox([m
[32m+[m[32m    'Select a movie:',[m
[32m+[m[32m    movies['title'].values[m
[32m+[m[32m)[m
[32m+[m
[32m+[m
[32m+[m[32mif st.button('Recommend'):[m
[32m+[m[32m    names, posters = recommend(selected_movie_name)[m
[32m+[m
[32m+[m
[32m+[m[32m    col1, col2, col3, col4, col5 = st.columns(5)[m
[32m+[m
[32m+[m[32m    with col1:[m
[32m+[m[32m        st.text(names[0])[m
[32m+[m[32m        st.image(posters[0])[m
[32m+[m[32m    with col2:[m
[32m+[m[32m        st.text(names[1])[m
[32m+[m[32m        st.image(posters[1])[m
[32m+[m[32m    with col3:[m
[32m+[m[32m        st.text(names[2])[m
[32m+[m[32m        st.image(posters[2])[m
[32m+[m[32m    with col4:[m
[32m+[m[32m        st.text(names[3])[m
[32m+[m[32m        st.image(posters[3])[m
[32m+[m[32m    with col5:[m
[32m+[m[32m        st.text(names[4])[m
[32m+[m[32m        st.image(posters[4])[m
[1mdiff --git a/main.py b/main.py[m
[1mindex 5596b44..e69de29 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -1,16 +0,0 @@[m
[31m-# This is a sample Python script.[m
[31m-[m
[31m-# Press Shift+F10 to execute it or replace it with your code.[m
[31m-# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.[m
[31m-[m
[31m-[m
[31m-def print_hi(name):[m
[31m-    # Use a breakpoint in the code line below to debug your script.[m
[31m-    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.[m
[31m-[m
[31m-[m
[31m-# Press the green button in the gutter to run the script.[m
[31m-if __name__ == '__main__':[m
[31m-    print_hi('PyCharm')[m
[31m-[m
[31m-# See PyCharm help at https://www.jetbrains.com/help/pycharm/[m
[1mdiff --git a/setup.sh b/setup.sh[m
[1mindex e69de29..33aa5fc 100644[m
[1m--- a/setup.sh[m
[1m+++ b/setup.sh[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mmkdir -p ~/.streamlit/[m
[32m+[m
[32m+[m[32mecho"\[m
[32m+[m[32m[server]\n\[m
[32m+[m[32mport=$PORT\n\[m
[32m+[m[32menableCORS= false\n\[m
[32m+[m[32mheadless= true\n\[m
[32m+[m[32m\n\[m
[32m+[m[32m" > ~/.streamlit/config.toml[m
\ No newline at end of file[m
